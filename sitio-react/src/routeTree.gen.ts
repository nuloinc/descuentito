/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SupermercadosImport } from './routes/supermercados'
import { Route as SecretTwitterImagesImport } from './routes/secret-twitter-images'
import { Route as IndexImport } from './routes/index'
import { Route as ConfiguracionMediosIndexImport } from './routes/configuracion/medios/index'
import { Route as ConfiguracionMediosWizardStepImport } from './routes/configuracion/medios/wizard.$step'

// Create/Update Routes

const SupermercadosRoute = SupermercadosImport.update({
  id: '/supermercados',
  path: '/supermercados',
  getParentRoute: () => rootRoute,
} as any)

const SecretTwitterImagesRoute = SecretTwitterImagesImport.update({
  id: '/secret-twitter-images',
  path: '/secret-twitter-images',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ConfiguracionMediosIndexRoute = ConfiguracionMediosIndexImport.update({
  id: '/configuracion/medios/',
  path: '/configuracion/medios/',
  getParentRoute: () => rootRoute,
} as any)

const ConfiguracionMediosWizardStepRoute =
  ConfiguracionMediosWizardStepImport.update({
    id: '/configuracion/medios/wizard/$step',
    path: '/configuracion/medios/wizard/$step',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/secret-twitter-images': {
      id: '/secret-twitter-images'
      path: '/secret-twitter-images'
      fullPath: '/secret-twitter-images'
      preLoaderRoute: typeof SecretTwitterImagesImport
      parentRoute: typeof rootRoute
    }
    '/supermercados': {
      id: '/supermercados'
      path: '/supermercados'
      fullPath: '/supermercados'
      preLoaderRoute: typeof SupermercadosImport
      parentRoute: typeof rootRoute
    }
    '/configuracion/medios/': {
      id: '/configuracion/medios/'
      path: '/configuracion/medios'
      fullPath: '/configuracion/medios'
      preLoaderRoute: typeof ConfiguracionMediosIndexImport
      parentRoute: typeof rootRoute
    }
    '/configuracion/medios/wizard/$step': {
      id: '/configuracion/medios/wizard/$step'
      path: '/configuracion/medios/wizard/$step'
      fullPath: '/configuracion/medios/wizard/$step'
      preLoaderRoute: typeof ConfiguracionMediosWizardStepImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/secret-twitter-images': typeof SecretTwitterImagesRoute
  '/supermercados': typeof SupermercadosRoute
  '/configuracion/medios': typeof ConfiguracionMediosIndexRoute
  '/configuracion/medios/wizard/$step': typeof ConfiguracionMediosWizardStepRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/secret-twitter-images': typeof SecretTwitterImagesRoute
  '/supermercados': typeof SupermercadosRoute
  '/configuracion/medios': typeof ConfiguracionMediosIndexRoute
  '/configuracion/medios/wizard/$step': typeof ConfiguracionMediosWizardStepRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/secret-twitter-images': typeof SecretTwitterImagesRoute
  '/supermercados': typeof SupermercadosRoute
  '/configuracion/medios/': typeof ConfiguracionMediosIndexRoute
  '/configuracion/medios/wizard/$step': typeof ConfiguracionMediosWizardStepRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/secret-twitter-images'
    | '/supermercados'
    | '/configuracion/medios'
    | '/configuracion/medios/wizard/$step'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/secret-twitter-images'
    | '/supermercados'
    | '/configuracion/medios'
    | '/configuracion/medios/wizard/$step'
  id:
    | '__root__'
    | '/'
    | '/secret-twitter-images'
    | '/supermercados'
    | '/configuracion/medios/'
    | '/configuracion/medios/wizard/$step'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SecretTwitterImagesRoute: typeof SecretTwitterImagesRoute
  SupermercadosRoute: typeof SupermercadosRoute
  ConfiguracionMediosIndexRoute: typeof ConfiguracionMediosIndexRoute
  ConfiguracionMediosWizardStepRoute: typeof ConfiguracionMediosWizardStepRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SecretTwitterImagesRoute: SecretTwitterImagesRoute,
  SupermercadosRoute: SupermercadosRoute,
  ConfiguracionMediosIndexRoute: ConfiguracionMediosIndexRoute,
  ConfiguracionMediosWizardStepRoute: ConfiguracionMediosWizardStepRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/secret-twitter-images",
        "/supermercados",
        "/configuracion/medios/",
        "/configuracion/medios/wizard/$step"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/secret-twitter-images": {
      "filePath": "secret-twitter-images.tsx"
    },
    "/supermercados": {
      "filePath": "supermercados.tsx"
    },
    "/configuracion/medios/": {
      "filePath": "configuracion/medios/index.tsx"
    },
    "/configuracion/medios/wizard/$step": {
      "filePath": "configuracion/medios/wizard.$step.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
